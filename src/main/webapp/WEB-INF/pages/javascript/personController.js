/** * Created by Kristian on 13/02/14. */app.filter('startFrom', function() {    return function(input, start) {        start = +start; //parse to int        return input.slice(start);    };});app.controller("PersonCtrl", function($scope, $resource, $filter){    var orderBy = $filter('orderBy');    $scope.tmpGroupList = [];    $scope.currentPage = 0;    $scope.pageSize = 20;    var tmpObj = $resource("api/list", {}, {            get:{                isArray:true,                method:"GET"            }        }    );    var persons = tmpObj.get(    function () {            angular.forEach(persons, function(person) {                angular.forEach(person.memberOf, function(group) {                    if (!_.contains($scope.tmpGroupList, group)) {                        $scope.tmpGroupList.push(group);                    }                });            });        $scope.tmpGroupList.sort();        $scope.isInGroup = function(group) {            console.log("isInGroup");            console.log(group);            for (person in $scope.persons) {                for (group in person.memberOf) {                    if (_.contains($scope.groupsSelected, group)) {                        $scope.shownPeople.push(person);                        break;                    }                }            }        };        nameSort(persons);        $scope.persons = persons;        $scope.shownPeople = persons.concat();        $scope.totalUsers = $scope.shownPeople.size();        $scope.groupList = $scope.tmpGroupList.concat();        $scope.remove = false;        $scope.order('sn',false);       // $scope.numberOfPages = Math.ceil($scope.shownPeople.length/$scope.pageSize);    });    $scope.groupsSelected = []; /* Selected groups are id'ed with namestrings, since no groups can have the same name */    $scope.numberOfPages=function(){        return Math.ceil($scope.shownPeople.length/$scope.pageSize);    }    $scope.checkAll = function() {        $scope.shownPeople = $scope.persons.concat();        $scope.groupsSelected=$scope.groupList.concat();    };    $scope.uncheck = function() {        $scope.shownPeople = $scope.persons.concat();        $scope.groupsSelected = [];    }    $scope.isChecked = function(group) {        if (_.contains($scope.groupsSelected, group)) {            return 'glyphicon glyphicon-ok pull-right';        }        return false;    };    $scope.personInGroup = function(group){        if($scope.groupsSelected.length<1) {            $scope.shownPeople = [];        }        if(_.contains($scope.groupsSelected, group)) {            var index = $scope.groupsSelected.indexOf(group);            $scope.groupsSelected.splice(index, 1);            if($scope.groupsSelected.length==0) {                $scope.shownPeople = $scope.persons.concat();                return;            }        }        else {            $scope.groupsSelected.push(group);        }        /* TODO, MAKE IT WORK */        angular.forEach($scope.persons, function(person) {            if (_.contains(person.memberOf, group)) {                if (_.contains($scope.groupsSelected, group))  {                    if (!_.contains($scope.shownPeople, person)) {                        $scope.shownPeople.push(person);                    }                }                else {                    var groupsChosen = 0;                    angular.forEach(person.memberOf, function(pGroup) {                        if (_.contains($scope.groupsSelected, pGroup)) {                            groupsChosen ++;                        }                    });                    console.log(groupsChosen);                    if (groupsChosen < 1) {                        var index = $scope.shownPeople.indexOf(person);                        $scope.shownPeople.splice(index, 1);                    }                }            }            nameSort($scope.shownPeople);        });    };    nameSort = function(persons) {        persons.sort(function(a, b){   /** By first sorting by forname, people with same surname will get sorted automatically #latskap **/            if(a.givenName < b.givenName) return -1;            if(a.givenName > b.givenName) return 1;            return 0;        });        persons.sort(function(a, b){            if(a.sn < b.sn) return -1;            if(a.sn > b.sn) return 1;            return 0;        });    }    $scope.navToUser = function(clickedPerson) {        console.log('href="#/user"/' + clickedPerson.uidNumber);        window.location.href="#/user/" + clickedPerson.uidNumber;    }    $scope.order = function(predicate, reverse) {        $scope.shownPeople = orderBy($scope.shownPeople, predicate, reverse);    }});